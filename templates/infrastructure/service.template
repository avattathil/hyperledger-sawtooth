{
    "Description": "Service Template",
    "Parameters": {
        "NameTag": {
            "Type": "String",
            "Description": "Name used to tag resources"
        },
        "VPCID": {
            "Description": "Target VPC where Services will be deployed",
            "Type": "AWS::EC2::VPC::Id"
        },
        "ClusterID": {
            "Description": "Target ECS Cluster ID ",
            "Type": "String"
        },
        "Listener": {
            "Description": "Application Load Balancer listener ",
            "Type": "String"
        },
        "DesiredCount": {
            "Description": "Number of instancaes of task to be run in ECSCluster",
            "Type": "Number",
            "Default": 1
        },
        "Path": {
            "Description": " Application Load Balancer registeration path",
            "Type": "String",
            "Default": "/blocks"
        },
        "PrivateSubnets": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "Application Load Balancer Private Subnets"
        },
        "ECSSecurityGroup": {
            "Description": "ECS Cluster Security Group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        }
    },
    "Resources": {
        "Service": {
            "Type": "AWS::ECS::Service",
            "DependsOn": "ListenerRule",
            "Properties": {
                "Cluster": {
                    "Ref": "ClusterID"
                },
                "DesiredCount": {
                    "Ref": "DesiredCount"
                },
                "TaskDefinition": {
                    "Ref": "TaskDefinition"
                },
                "LoadBalancers": [
                    {
                        "ContainerName": "rest-api",
                        "ContainerPort": 8008,
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        }
                    }
                ],
                "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                        "AssignPublicIp": "DISABLED",
                        "SecurityGroups": [
                            {
                                "Ref": "ECSSecurityGroup"
                            }
                        ],
                        "Subnets": {
                            "Ref": "PrivateSubnets"
                        }
                    }
                }
            }
        },
        "TaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "RequiresCompatibilities": [
                    "EC2"
                ],
                "Family": "1",
                "NetworkMode": "awsvpc",
                "Cpu": "2048",
                "Memory": "512",
                "ContainerDefinitions": [
                    {
                        "DnsSearchDomains": [],
                        "Environment": [],
                        "ReadonlyRootFilesystem": false,
                        "Name": "settings-tp",
                        "Links": [],
                        "MountPoints": [],
                        "Image": "hyperledger/sawtooth-settings-tp:1.0",
                        "LinuxParameters": {
                            "Capabilities": {}
                        },
                        "Essential": true,
                        "PortMappings": [],
                        "DnsServers": [],
                        "DockerSecurityOptions": [],
                        "EntryPoint": [
                            "settings-tp",
                            "-vv",
                            "-C",
                            "tcp://validator:4004"
                        ],
                        "Ulimits": [],
                        "Privileged": false,
                        "Memory": 512,
                        "Command": [],
                        "ExtraHosts": [],
                        "Cpu": 0,
                        "VolumesFrom": [],
                        "DockerLabels": {}
                    },
                    {
                        "DnsSearchDomains": [],
                        "Environment": [],
                        "ReadonlyRootFilesystem": false,
                        "Name": "shell",
                        "Links": [],
                        "MountPoints": [],
                        "Image": "hyperledger/sawtooth-all:1.0",
                        "LinuxParameters": {
                            "Capabilities": {}
                        },
                        "Essential": true,
                        "PortMappings": [],
                        "DnsServers": [],
                        "DockerSecurityOptions": [],
                        "EntryPoint": [
                            "bash",
                            "-c",
                            "sawtooth keygen && tail -f /dev/null "
                        ],
                        "Ulimits": [],
                        "Privileged": false,
                        "Memory": 512,
                        "Command": [],
                        "ExtraHosts": [],
                        "Cpu": 0,
                        "VolumesFrom": [],
                        "DockerLabels": {}
                    },
                    {
                        "DnsSearchDomains": [],
                        "Environment": [],
                        "ReadonlyRootFilesystem": false,
                        "Name": "validator",
                        "Links": [],
                        "MountPoints": [],
                        "Image": "hyperledger/sawtooth-validator:1.0",
                        "LinuxParameters": {
                            "Capabilities": {}
                        },
                        "Essential": true,
                        "PortMappings": [
                            {
                                "Protocol": "tcp",
                                "ContainerPort": 4004,
                                "HostPort": 4004
                            }
                        ],
                        "DnsServers": [],
                        "DockerSecurityOptions": [],
                        "EntryPoint": [
                            "bash",
                            "-c",
                            "sawadm keygen && sawtooth keygen my_key && sawset genesis -k /root/.sawtooth/keys/my_key.priv && sawadm genesis config-genesis.batch && sawtooth-validator -vv --endpoint tcp://validator:8800 --bind component:tcp://eth0:4004 --bind network:tcp://eth0:8800 "
                        ],
                        "Ulimits": [],
                        "Privileged": false,
                        "Memory": 512,
                        "Command": [],
                        "ExtraHosts": [],
                        "Cpu": 0,
                        "VolumesFrom": [],
                        "DockerLabels": {}
                    },
                    {
                        "DnsSearchDomains": [],
                        "Environment": [],
                        "ReadonlyRootFilesystem": false,
                        "Name": "xo-tp-python",
                        "Links": [],
                        "MountPoints": [],
                        "Image": "hyperledger/sawtooth-xo-tp-python:1.0",
                        "LinuxParameters": {
                            "Capabilities": {}
                        },
                        "Essential": true,
                        "PortMappings": [],
                        "DnsServers": [],
                        "DockerSecurityOptions": [],
                        "EntryPoint": [
                            "xo-tp-python",
                            "-vv",
                            "-C",
                            "tcp://validator:4004"
                        ],
                        "Ulimits": [],
                        "Privileged": false,
                        "Memory": 512,
                        "Command": [],
                        "ExtraHosts": [],
                        "Cpu": 0,
                        "VolumesFrom": [],
                        "DockerLabels": {}
                    },
                    {
                        "DnsSearchDomains": [],
                        "Environment": [],
                        "ReadonlyRootFilesystem": false,
                        "Name": "intkey-tp-python",
                        "Links": [],
                        "MountPoints": [],
                        "Image": "hyperledger/sawtooth-intkey-tp-python:1.0",
                        "LinuxParameters": {
                            "Capabilities": {}
                        },
                        "Essential": true,
                        "PortMappings": [],
                        "DnsServers": [],
                        "DockerSecurityOptions": [],
                        "EntryPoint": [
                            "intkey-tp-python",
                            "-vv",
                            "-C",
                            "tcp://validator:4004"
                        ],
                        "Ulimits": [],
                        "Privileged": false,
                        "Memory": 512,
                        "Command": [],
                        "ExtraHosts": [],
                        "Cpu": 0,
                        "VolumesFrom": [],
                        "DockerLabels": {}
                    },
                    {
                        "DnsSearchDomains": [],
                        "Environment": [],
                        "ReadonlyRootFilesystem": false,
                        "Name": "rest-api",
                        "Links": [],
                        "MountPoints": [],
                        "Image": "hyperledger/sawtooth-rest-api:1.0",
                        "LinuxParameters": {
                            "Capabilities": {}
                        },
                        "Essential": true,
                        "PortMappings": [
                            {
                                "Protocol": "tcp",
                                "ContainerPort": 8008,
                                "HostPort": 8008
                            }
                        ],
                        "DnsServers": [],
                        "DockerSecurityOptions": [],
                        "EntryPoint": [
                            "sawtooth-rest-api",
                            "-C",
                            "tcp://validator:4004",
                            "--bind",
                            "rest-api:8008"
                        ],
                        "Ulimits": [],
                        "Privileged": false,
                        "Memory": 512,
                        "Command": [],
                        "ExtraHosts": [],
                        "Cpu": 0,
                        "VolumesFrom": [],
                        "DockerLabels": {}
                    }
                ]
            }
        },
        "TargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "Port": 8008,
                "Protocol": "HTTP",
                "Matcher": {
                    "HttpCode": "200-299"
                },
                "HealthCheckIntervalSeconds": 10,
                "HealthCheckPath": "/blocks",
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "TargetType": "ip"
            }
        },
        "ListenerRule": {
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "Properties": {
                "ListenerArn": {
                    "Ref": "Listener"
                },
                "Priority": 2,
                "Conditions": [
                    {
                        "Field": "path-pattern",
                        "Values": [
                            {
                                "Ref": "Path"
                            }
                        ]
                    }
                ],
                "Actions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        },
                        "Type": "forward"
                    }
                ]
            }
        },
        "CloudWatchLogsGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Ref": "AWS::StackName"
                },
                "RetentionInDays": 365
            }
        }
    }
}